user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # types_hash 최적화 설정 추가
    types_hash_max_size 2048;
    types_hash_bucket_size 128;

    sendfile on;
    keepalive_timeout 65;

    # ✅ reset-password 로그 형식 정의
    log_format reset_password_log '$remote_addr - $time_local [$status] "$request" '
                                   'uri:$uri referer:$http_referer ua:"$http_user_agent"';

    # HTTP에서 HTTPS로 리다이렉트 (80번 포트)
    server {
        listen 80;
        server_name hamlol.xyz;
        return 301 https://$server_name$request_uri;
    }

    # HTTPS 서버 설정 (443번 포트)
    server {
        listen 443 ssl;
        http2 on;  # 올바른 http2 directive 사용
        server_name hamlol.xyz;

        # SSL 인증서 설정 (Let's Encrypt 사용 시)
        ssl_certificate /etc/letsencrypt/live/hamlol.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/hamlol.xyz/privkey.pem;

        # SSL 보안 설정 강화
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # OCSP responder가 있는 경우에만 ssl_stapling 활성화
        # ssl_stapling on;
        # ssl_stapling_verify on;

        # 보안 헤더 추가
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'self';" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # 요청 크기 제한
        client_max_body_size 10M;
        client_body_timeout 30s;
        client_header_timeout 30s;

        root /home/ec2-user/hamlol/frontend/hamlolweb/build;
        index index.html;

        # ✅ /reset-password/** → 별도 로그 + SPA 대응
        location ~ ^/reset-password/ {
            access_log /var/log/nginx/reset-password.log reset_password_log;
            try_files $uri /index.html;
        }

        # ✅ /api/** → 백엔드로 프록시
        location ^~ /api/ {
            proxy_pass http://127.0.0.1:8080;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 프록시 타임아웃 설정
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # ✅ Riot Games API 검증을 위한 riot.txt 파일 직접 제공
        location = /riot.txt {
            try_files $uri =404;
            add_header Content-Type text/plain;
        }

        # ✅ 그 외는 React SPA 진입점 처리
        location / {
            try_files $uri $uri/ /index.html;
        }

        # 숨겨진 파일 접근 차단
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 로그 파일 접근 차단
        location ~* \.(log|txt)$ {
            deny all;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}